<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.t-systems.misp</groupId>
  <artifactId>meet-spa-core</artifactId>
  <version>0.1.0-SNAPSHOT</version>

  <properties>
    <git.commit.plugin.version>2.2.4</git.commit.plugin.version>
    <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
    <maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
    <dockerfile.plugin.version>1.3.7</dockerfile.plugin.version>
    <javax.activation.version>1.1.1</javax.activation.version>

    <maven.compiler.source>1.9</maven.compiler.source>
    <maven.compiler.target>1.9</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</maven.build.timestamp.format>
    <project.build.timestamp>${maven.build.timestamp}</project.build.timestamp>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}/deployment</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.yml</include>
        </includes>
        <targetPath>${project.build.directory}</targetPath>
      </resource>
      <resource>
        <directory>${project.basedir}/deployment/config/docker</directory>
        <filtering>true</filtering>
        <includes>
          <include>Dockerfile</include>
        </includes>
        <targetPath>${project.build.directory}</targetPath>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git.commit.plugin.version}</version>
          <executions>
            <execution>
              <id>get-the-git-infos</id>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
            <execution>
              <id>validate-the-git-infos</id>
              <goals>
                <goal>validateRevision</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>package</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/dist</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/dist</directory>
                    <filtering>false</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>${dockerfile.plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>javax.activation</groupId>
              <artifactId>activation</artifactId>
              <version>${javax.activation.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>build</goal>
                <goal>push</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <repository>${docker.registry}/${project.artifactId}</repository>
            <tag>${project.version}</tag>
            <contextDirectory>${project.build.directory}</contextDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${maven.exec.plugin.version}</version>
          <executions>
            <!--<execution>
                <id>yarn-install</id>
                <phase>validate</phase>
                <goals>
                    <goal>exec</goal>
                </goals>
                <configuration>
                    <executable>yarn</executable>
                    <arguments>
                        <argument>install</argument>
                    </arguments>
                </configuration>
            </execution>
            <execution>
                <id>yarn-build</id>
                <phase>compile</phase>
                <goals>
                    <goal>exec</goal>
                </goals>
                <configuration>
                    <executable>yarn</executable>
                    <arguments>
                        <argument>run</argument>
                        <argument>build</argument>
                    </arguments>
                </configuration>
            </execution>
            <execution>
                <id>yarn-test-unit</id>
                <phase>test</phase>
                <goals>
                    <goal>exec</goal>
                </goals>
                <configuration>
                    <executable>yarn</executable>
                    <arguments>
                        <argument>run</argument>
                        <argument>unit</argument>
                    </arguments>
                </configuration>
            </execution>
            <execution>
                <id>yarn-test-e2e</id>
                <phase>integration-test</phase>
                <goals>
                    <goal>exec</goal>
                </goals>
                <configuration>
                    <executable>yarn</executable>
                    <arguments>
                        <argument>run</argument>
                        <argument>e2e</argument>
                    </arguments>
                </configuration>
            </execution-->
            <execution>
              <id>kubectl-deployment</id>
              <phase>deploy</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <executable>kubectl</executable>
                <arguments>
                  <argument>apply</argument>
                  <argument>-f</argument>
                  <argument>${project.build.directory}/config/kubernetes/deployment.yml</argument>
                </arguments>
              </configuration>
            </execution>
            <execution>
              <id>kubectl-service</id>
              <phase>deploy</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <executable>kubectl</executable>
                <arguments>
                  <argument>apply</argument>
                  <argument>-f</argument>
                  <argument>${project.build.directory}/config/kubernetes/service.yml</argument>
                </arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
